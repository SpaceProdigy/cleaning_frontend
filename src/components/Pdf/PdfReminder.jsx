import QRCode from "qrcode";
import {
  Document,
  Page,
  Text,
  View,
  StyleSheet,
  Image,
} from "@react-pdf/renderer";

import PropTypes from "prop-types";

import { useEffect, useState } from "react";

import { telegramGroups } from "../../locales/telegram";

const styles = StyleSheet.create({
  page: {
    padding: "20px",
    textAlign: "center",
  },
  section: {
    margin: 20,
    padding: 10,
  },
  bottomSection: {
    flexDirection: "row",

    justifyContent: "center",
    alignItems: "center",
  },
  text: {
    fontFamily: "Roboto",
    fontSize: 14,
    textAlign: "justify",
  },
  emptyBox: {
    width: "100px",
    height: "100px",
  },
});

const generateQRCode = async (text) => {
  try {
    const qrCodeDataUrl = await QRCode.toDataURL(text);
    return qrCodeDataUrl;
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ QR-–∫–æ–¥–∞", error);
  }
};

export const PdfReminder = ({ data, nameCollection }) => {
  const [qrCodeUrl, setQrCodeUrl] = useState("");

  useEffect(() => {
    const fetchQRCode = async () => {
      const isGroup = telegramGroups[nameCollection];
      if (isGroup) {
        const qrCode = await generateQRCode(telegramGroups[nameCollection]);
        setQrCodeUrl(qrCode);
      }
    };
    fetchQRCode();
  }, [nameCollection]);

  return (
    <Document style={{ width: "100%" }}>
      <Page size="A4" style={styles.page}>
        {(data || [])?.map(({ task, roomNumber, date }, index) => (
          <View key={index} style={styles.section}>
            <Text
              style={{
                ...styles.text,
                fontSize: 16,
                textAlign: "center",
                fontWeight: "bold",
              }}
            >
              üîî –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ–± —É–±–æ—Ä–∫–µ! / Cleaning Reminder! üîî
            </Text>
            <Text style={styles.text}>
              üßπ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –µ—ë –≤–æ–≤—Ä–µ–º—è. –ï—Å–ª–∏ –Ω–µ —Å–º–æ–∂–µ—Ç–µ —É–±—Ä–∞—Ç—å –≤
              —É–∫–∞–∑–∞–Ω–Ω—ã–π –¥–µ–Ω—å, —Å–¥–µ–ª–∞–π—Ç–µ —ç—Ç–æ –Ω–∞ –¥–µ–Ω—å —Ä–∞–Ω—å—à–µ –∏–ª–∏ –ø–æ–∑–∂–µ –∏–ª–∏
              –¥–æ–≥–æ–≤–æ—Ä–∏—Ç–µ—Å—å —Å —Å–æ—Å–µ–¥—è–º–∏.
            </Text>
            <Text style={styles.text}>
              ‚ö†Ô∏è –í–∞–∂–Ω–æ! –ï—Å–ª–∏ —É–±–æ—Ä–∫–∞ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –∏ –ø—Ä–∏—á–∏–Ω–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞, –∫–æ–º–Ω–∞—Ç–∞
              –ø–æ–ø–∞–¥—ë—Ç –≤ —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–ø—É—â–µ–Ω–Ω–æ–π —É–±–æ—Ä–∫–∏.
            </Text>
            <Text style={styles.text}>
              üßπ Please complete it on time. If you can‚Äôt clean on the assigned
              day, do it a day earlier or later, or arrange it with neighbors.
            </Text>
            <Text style={styles.text}>
              ‚ö†Ô∏è Important! If the cleaning is not done and no reason is given,
              your room will be added to the missed cleaning list.
            </Text>
            <Text
              style={{
                ...styles.text,
                textAlign: "center",
                marginTop: "5px",
              }}
            >
              üôè –°–ø–∞—Å–∏–±–æ –∑–∞ —É—á–∞—Å—Ç–∏–µ! / Thank you for your cooperation! üòä
            </Text>
            <Text
              style={{
                ...styles.text,
                textAlign: "center",
                fontWeight: "bold",
                margin: "10px",
                fontSize: 16,
              }}
            >
              {roomNumber && task?.ua && task?.en && date
                ? `${roomNumber} ${task.ua} / ${task.en} ${date}`
                : "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"}
            </Text>
            <View key={index} style={styles.bottomSection}>
              <View>
                <Text style={styles.text}>
                  ‚úÖ –ï—Å–ª–∏ —É–±–æ—Ä–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–æ–±—â–∏—Ç–µ –≤ –≥—Ä—É–ø–ø—É –∏ –Ω–µ
                  –∑–∞–±—É–¥—å—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ. –°–ø–∞—Å–∏–±–æ –∑–∞ —É—á–∞—Å—Ç–∏–µ! üì∏üôå
                </Text>
                <Text style={styles.text}>
                  ‚úÖ If the cleaning is done, please confirm in the group and
                  don‚Äôt forget to send a photo. Thank you! üì∏üôå
                </Text>
              </View>

              {qrCodeUrl ? (
                <Image
                  src={qrCodeUrl}
                  style={{
                    width: 100,
                    height: 100,
                  }}
                />
              ) : (
                <View
                  style={{
                    width: 100,
                    height: 100,
                    backgroundColor: "#ffffff",
                  }}
                ></View>
              )}
            </View>
          </View>
        ))}
      </Page>
    </Document>
  );
};

PdfReminder.propTypes = {
  data: PropTypes.array.isRequired,
  nameCollection: PropTypes.string.isRequired,
};
